# This is the base image (ROS 2 Eloquent) that our docker container will be built from
FROM osrf/ros:eloquent-desktop AS cacher

# # Clone the overlay source (aka our GitHub repository, specify which branch to clone in the 'version' parameter)
# ARG OVERLAY_WS
# WORKDIR $OVERLAY_WS/src
# RUN echo "\
# repositories: \n\
#   GOFIRST-Robotics/LUNABOTICS-2023: \n\
#     type: git \n\
#     url: https://github.com/GOFIRST-Robotics/LUNABOTICS-2023.git \n\
#     version: main \n\
# " > ../overlay.repos
# RUN vcs import ./ < ../overlay.repos

# # Copy manifests for caching
# WORKDIR /opt
# RUN mkdir -p /tmp/opt && \
#     find ./ -name "package.xml" | \
#       xargs cp --parents -t /tmp/opt && \
#     find ./ -name "COLCON_IGNORE" | \
#       xargs cp --parents -t /tmp/opt || true

# # Multi-stage for building
# FROM $FROM_IMAGE AS builder

# Install overlay dependencies (this runs rosdep to search for and install any package dependencies we have specified)
# ARG OVERLAY_WS
# WORKDIR $OVERLAY_WS
# RUN source /opt/ros/$ROS_DISTRO/setup.sh 
# RUN apt-get update && rosdep install -i \
#     \

# Build overlay source (this essentially runs "colcon build" to build our ROS 2 workspace)
# COPY --from=cacher $OVERLAY_WS/src ./src
# ARG OVERLAY_MIXINS="release"
# RUN . /opt/ros/$ROS_DISTRO/setup.sh && \
#     colcon build \
#       --mixin $OVERLAY_MIXINS

# Source entrypoint setup (source the ROS 2 environment)
# ENV OVERLAY_WS $OVERLAY_WS
# RUN sed --in-place --expression \
#       '$isource "$OVERLAY_WS/install/setup.bash"' \
#       /ros_entrypoint.sh