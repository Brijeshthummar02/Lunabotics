# This is the base image (ROS2 Humble) that our docker container will be built from
ARG FROM_IMAGE=ros:humble
ARG OVERLAY_WS=/opt/ros/overlay_ws

# This line enables caching so that the image doesn't have to be fully built from scratch each time
FROM $FROM_IMAGE AS cacher

# Clone the overlay source (aka our GitHub repository, specify which branch to clone in the 'version' parameter)
ARG OVERLAY_WS
WORKDIR $OVERLAY_WS/src
RUN echo "\
repositories: \n\
  GOFIRST-Robotics/LUNABOTICS-2023: \n\
    type: git \n\
    url: https://github.com/GOFIRST-Robotics/LUNABOTICS-2023.git \n\
    version: main \n\
" > ../overlay.repos
RUN vcs import ./ < ../overlay.repos

# Copy manifests for caching
WORKDIR /opt
RUN mkdir -p /tmp/opt && \
    find ./ -name "package.xml" | \
      xargs cp --parents -t /tmp/opt && \
    find ./ -name "COLCON_IGNORE" | \
      xargs cp --parents -t /tmp/opt || true

# Multi-stage for building
FROM $FROM_IMAGE AS builder

# Install overlay dependencies (this runs rosdep to search for and install any package dependencies we have specified)
ARG OVERLAY_WS
WORKDIR $OVERLAY_WS
COPY --from=cacher /tmp/$OVERLAY_WS/src ./src
RUN . /opt/ros/$ROS_DISTRO/setup.sh && \
    apt-get update && rosdep install -i \
    --from-path src --rosdistro humble -y \
    && rm -rf /var/lib/apt/lists/*

# Install pip dependencies (this line is only needed for running the next line)
RUN apt-get update && apt-get install -y python3-pip
# Downgrade the 'setuptools' library because this is the latest version that ROS2 Humble currently supports
RUN pip install setuptools==58.2.0

# Build overlay source (this runs colcon build to build our ROS workspace, specify packages in --packages-select)
COPY --from=cacher $OVERLAY_WS/src ./src
ARG OVERLAY_MIXINS="release"
RUN . /opt/ros/$ROS_DISTRO/setup.sh && \
    colcon build \
      --packages-select \
        navx_cpp_package \
        motor_control \
        rovr_control \
      --mixin $OVERLAY_MIXINS

# Source entrypoint setup (source the ROS environment)
ENV OVERLAY_WS $OVERLAY_WS
RUN sed --in-place --expression \
      '$isource "$OVERLAY_WS/install/setup.bash"' \
      /ros_entrypoint.sh

# Initialize & update our CAN_bridge submodule
RUN cd src/GOFIRST-Robotics/LUNABOTICS-2023 && git submodule init && git submodule update
# Install this required dependency for the CAN_bridge submodule (TODO: Is this the right way to solve the problem? It seems like the can_bridge node is still giving us issues when we try running it)
RUN apt-get install libboost-all-dev -y

# Install overlay dependencies again (for the CAN_bridge submodule)
ARG OVERLAY_WS
WORKDIR $OVERLAY_WS
COPY --from=cacher /tmp/$OVERLAY_WS/src ./src
RUN . /opt/ros/$ROS_DISTRO/setup.sh && \
    apt-get update && rosdep install -i \
    --from-path src --rosdistro humble -y \
    && rm -rf /var/lib/apt/lists/*

# Build overlay source again (to build the CAN bridge submodule)
COPY --from=cacher $OVERLAY_WS/src ./src
ARG OVERLAY_MIXINS="release"
RUN . /opt/ros/$ROS_DISTRO/setup.sh && \
    colcon build \
      --packages-select \
        ros2socketcan_bridge \
      --mixin $OVERLAY_MIXINS